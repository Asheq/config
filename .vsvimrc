let mapleader = ","
let g:mapleader = ","

set ignorecase
set smartcase
set incsearch
set tabstop=4

nnoremap K i<cr><esc>k$
inoremap jk <esc>
inoremap kj <esc>
inoremap kk <esc>l

nnoremap gwo :vsc FullScreen<cr>
nnoremap gws :vsc Window.Split<cr>
nnoremap gwc :vsc Window.Split<cr>
nnoremap gwC :vsc Window.CloseDocumentWindow<cr>
nnoremap gwH :vsc Window.MovetoPreviousTabGroup<cr>
nnoremap gwL :vsc Window.MovetoNextTabGroup<cr>
nnoremap gwS :vsc Window.NewHorizontalTabGroup<cr>
nnoremap gwv :vsc Window.NewVerticalTabGroup<cr>
nnoremap gwT :vsc Window.Float<cr>
nnoremap gwj :vsc Window.NextSplitPane<cr>
nnoremap gwk :vsc Window.PreviousSplitPane<cr>

nnoremap <leader>bd :vsc Window.CloseDocumentWindow<cr>
nnoremap <c-d> <PageDown>
nnoremap <c-u> <PageUp>
nnoremap <leader>w  :w<cr>
nnoremap <leader>d "_d
xnoremap <leader>d "_d
nnoremap <leader>D "_D
nnoremap =p o<esc>p==
nnoremap =P O<esc>p==
nnoremap <c-l> :nohlsearch<cr>
noremap 0 ^
noremap - $

nnoremap Y y$

nnoremap <c-o> :vsc View.NavigateBackward<cr>
nnoremap <c-i> :vsc View.NavigateForward<cr>
xnoremap gc :vsc Edit.CommentSelection<cr>
nnoremap gcc V:vsc Edit.CommentSelection<cr>
" nnoremap ]q :vsc View.NextError<cr>
" nnoremap [q :vsc View.PreviousError<cr>


" gs => expression manipulation
" gz => inspect the current symbol
" cr => refactor the current symbol
" g/ => search for files and symbols

nnoremap gr :vsc Edit.FindAllReferences<cr>
" go to the type of the current symbol
nnoremap gD :vsc ReSharper.ReSharper_GotoTypeDeclaration<cr>
nnoremap gR :vsc ReSharper.ReSharper_Rename<cr>
" nnoremap <M-o> go to class member
" nnoremap <M-t> go to tag/symbol

" go to anything (types/symbols/files)
nnoremap <C-p> :vsc ReSharper.ReSharper_GotoType<cr>
" go to file
nnoremap g/f :vsc ReSharper.ReSharper_GotoFile<cr>
" grep everything
nnoremap g// :vsc Edit.FindinFiles<cr>

nnoremap gzz :vsc ReSharper.ReSharper_InspectThis<cr>
nnoremap gzt :vsc ReSharper.ReSharper_TypeHierarchy_Browse<cr>
nnoremap gzi :vsc ReSharper.ReSharper_GotoImplementation<cr>
nnoremap gzd :vsc ReSharper.ReSharper_QuickDoc<cr>

"show refactor menu
noremap crr :vsc ReSharper.ReSharper_RefactorThis<cr>
nnoremap crR :vsc ReSharper.ReSharper_Rename<cr>
nnoremap cri :vsc EditorContextMenus.CodeWindow.OrganizeUsings.RemoveAndSort<cr>
"show quickfix menu
nnoremap <bs> :vsc ReSharper_AltEnter<cr>

" expression manipulation
nnoremap gst :vsc Edit.WordTranspose<cr>
nnoremap gsh :vsc ReSharper.ReSharper_MoveLeft<cr>
nnoremap gsl :vsc ReSharper.ReSharper_MoveRight<cr>
nnoremap gsk :vsc ReSharper.ReSharper_MoveUp<cr>
nnoremap gsj :vsc ReSharper.ReSharper_MoveDown<cr>
nnoremap ]q :vsc Edit.GoToNextLocation<cr>
nnoremap [q :vsc Edit.GoToPrevLocation<cr>
nnoremap ]l  :vsc Edit.NextHighlightedReference<cr>
nnoremap [l  :vsc Edit.PreviousHighlightedReference<cr>

" 'omnibox'
nnoremap <space> :vsc Window.QuickLaunch<cr>

nnoremap <insert> :vsc Debug.ToggleBreakpoint<cr>
nnoremap gof :vsc File.OpenContainingFolder<cr>
nnoremap ^ :vsc SolutionExplorer.SyncWithActiveDocument<cr>

set hlsearch
set autoindent
set showmatch
set expandtab
set shiftwidth=4
set smarttab " Use 'shiftwidth' when using <Tab> in front of a line.
set shiftround
set ttimeout
set ttimeoutlen=50


